; BATTLE SHIPS (1989 Mirage) Jakub Husak
; MUZYKA TYTULOWA
MODULE

BYTE NR,B1,B2,B3,B4,B5,B6,B7,B8
BYTE SOLO=[0],BASS=[0],PODK=[0]
BYTE WBASS,WPODK,ZN,I,W,Z,TMR=20,
GB,GP,GS,SOLO1,Y,A,ATRACT=$4D,
AUDCTL=$D208,
CONSOL=$D01F
CARD OP,WSOLO

PROC WYBUCHY()
BYTE ARRAY SON=[6 5 5 4 3 2 1 0 0 0 0 0 6 5 5 5 5 4 4 4 4 4 4 3 3 3 2 1 0 0 0 0 4 3 3 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
BYTE I,W,GL,GLW,WY,WSK=[0],WYB,J,W1=[6]
CARD OP

TMR=0
FOR J=0 TO 5 DO
FOR I=0 TO 51 DO
GL=SON(I)
SOUND(0,26,10,GL)
IF CONSOL<>7 THEN EXIT FI
WHILE TMR<3 DO OD
TMR=0
W=RAND(20)
IF W=1 THEN
GLW=RAND(3)+3 WY=RAND(50)+180 WSK=1 W1=0
FI
 SOUND(1,WY,8,GLW)
 WYB=WY+5  SOUND(2,WYB,0,GLW)
 WYB=WY+10 SOUND(3,WYB,4,GLW)
W1==+1
 IF W1=WSK THEN W1=0 WSK==+2
  IF GLW>0 THEN GLW==-1 FI
 FI
OD
IF CONSOL<>7 THEN EXIT FI
OD
RETURN
;---
PROC GRAY()
BYTE ARRAY GBASS=[8 9 9 9 8 7 6 5 4 3 3 2 2 1 1 0]
BYTE ARRAY GPERK=[12 2 5 4 3 2 2 2 1 1 1 1 1 1 1 0]
BYTE ARRAY GPODK=[7 6 5 4 3 3 2 1 0]
BYTE ARRAY TAB=[
0 0 0 0 0 0 0 0
91 0 91 0 1 0 91 0
91 0 91 0 1 0 45 0
91 0 91 0 1 0 61 0
67 0 67 0 1 0 45 0
58 0 58 0 1 0 37 0
102 0 102 0 1 0 67 0
61 0 61 0 1 0 40 0
61 0 61 0 1 0 61 0
58 0 58 0 1 0 37 0
58 0 58 0 1 0 37 0

91 0 91 0 1 0 58 0
61 0 61 0 1 0 81 0
121 0 121 0 1 0 102 0
115 0 115 0 1 0 78 0
115 0 115 0 1 0 91 0
78 0 78 0 1 0 51 0
78 0 78 0 1 0 91 0
121 0 121 0 1 0 81 0

230 0 173 0 114 0 0 0
0 0 0 0 144 0 114 0
128 0 0 0 0 0 128 114
108 0 114 0 128 0 0 0
230 173 114 0 0 0 0 0
0 0 0 0 0 0 144 114
85 0 0 0 0 0 0 0
0 0 85 76 72 0 85 0
76 0 0 0 0 0 0 0
0 0 96 85 76 0 72 0
76 72 76 0 0 0 0 0
0 0 96 85 76 0 96 0
85 0 0 0 0 0 0 0
0 0 108 96 85 0 76 0
85 76 85 0 0 0 0 0
91 0 0 0 0 0 0 0

144 114 85 72 57 72 85 114
217 173 128 108 85 64 53 42
31 42 53 64 85 108 128 173
144 108 85 72 53 72 85 108
193 153 128 96 76 64 47 37
31 37 47 64 76 96 128 153
182 153 114 91 76 57 45 37
28 37 45 57 76 91 114 153
173 128 108 85 64 53 42 31
153 114 91 76 57 76 91 114

57 0 35 0 72 0 42 0
85 0 57 0 114 0 72 0
153 0 96 0 114 0 76 0
96 0 57 0 76 0 47 0
42 0 72 0 53 0 85 0
72 0 108 0 85 0 144 0
144 0 96 0 114 0 72 0
96 0 57 0 72 0 47 0
37 0 64 0 47 0 76 0
64 0 96 0 76 0 128 0
153 0 91 0 114 0 76 0
91 0 57 0 76 0 45 0
42 0 0 0 0 0 0 0

144 114 173 114 230 144 173 114
153 114 182 114 230 153 182 114
144 108 173 108 217 144 173 108
144 114 193 114 230 144 193 114
128 96 153 96 193 96 153 96
153 114 182 114 230 114 182 114

4 7 9 9 8 8 7 7
6 6 6 6 6 6 6 6
6 6 6 6 6 6 6 6
6 6 6 6 6 6 6 6
6 6 6 6 6 6 6 6
6 6 6 6 6 6 6 6
6 6 6 6 6 6 6 6
6 6 6 6 6 6 6 6
6 6 6 6 6 6 6 6
6 6 6 6 6 6 6 6
6 6 6 6 6 6 6 6
6 6 6 6 6 6 6 6
6 6 6 6 6 6 6 6
6 6 6 6 6 6 6 6
5 5 5 5 4 4 4 4
3 3 2 2 1 1 1 0]

BYTE ARRAY KOL=[
  1 0 0 1 0 0
  2 0 0 2 0 0
  1 0 0 1 0 0
  2 0 0 2 0 0
  1 35 0 1 35 0
  2 35 0 2 35 0
  1 35 0 1 35 0
  2 35 0 2 35 0
  3 35 19 3 35 20
  4 36 21 4 37 22
  3 35 23 3 35 24
  5 38 25 5 38 26
  6 39 27 6 40 28
  7 41 29 8 42 30
  9 38 31 9 38 32
  4 43 33 4 43 32
  7 44 34 7 44 0
  7 44 0 7 44 0

  3 35 19 3 35 20
  4 36 21 4 37 22
  3 35 23 3 35 24
  5 38 25 5 38 26
  6 39 27 6 40 28
  7 41 29 8 42 30
  9 38 31 9 38 32
  4 43 33 4 43 32
  7 44 34 7 44 0
  7 44 0 7 44 0


  3 58 45 11 58 46
  12 59 47 13 59 48
  14 60 49 15 60 50
  16 61 51 17 61 52
  6 62 53 6 62 54
  12 63 55 18 63 56
  3 58 57 3 58 0

  3 58 45 11 58 46
  12 59 47 13 59 48
  14 60 49 15 60 50
  16 61 51 17 61 52
  6 62 53 6 62 54
  12 63 55 18 63 56
  3 58 57 3 58 0]




SNDRST()
WYBUCHY()
WSOLO=639
WPODK=8
WBASS=15
FOR I=0 TO 83 DO
 OP=3*I   B1=KOL(OP)
 OP=3*I+1 B2=KOL(OP)
 OP=3*I+2 B3=KOL(OP)
 FOR W=0 TO 7 DO
  OP=8*B1+W B4=TAB(OP)
  OP=8*B2+W B5=TAB(OP)
  OP=8*B3+W B6=TAB(OP)
  IF B4<>0 THEN BASS=B4 WBASS=0 FI
  IF B5<>0 THEN PODK=B5 WPODK=0 FI
  IF B6<>0 THEN SOLO=B6 WSOLO=512 FI
  IF B4=1 THEN ZN=0 BASS=4 FI
  IF B4>1 THEN ZN=12 FI
  FOR Z=0 TO 1 DO
  FOR Y=0 TO 2 DO

    TMR=0
   GB=GBASS(WBASS)
   IF B4=1 THEN GB=GPERK(WBASS) FI
   IF I<8 THEN
    A=7-I IF GB>A THEN GB==-A ELSE
    GB=0
   FI
   FI
   GS=TAB(WSOLO)
   GP=GPODK(WPODK)

   IF WSOLO=536 THEN SOLO==+1
    ELSEIF WSOLO>536 THEN
    IF Z=0 THEN SOLO==-2 FI
    IF Z=1 THEN SOLO==+2 FI
   FI

   POKE(53760,BASS)
   GB==+ZN*16 POKE(53761,GB)
   POKE(53762,SOLO)
   GS==+160 POKE(53763,GS)
   POKE(53764,PODK)
   GP==+160 POKE(53765,GP)
   SOLO1=SOLO+1 POKE(53766,SOLO1)
                POKE(53767,160)
   POKE (53768,2)
   IF CONSOL<>7 THEN EXIT FI
   IF WBASS<14 THEN WBASS==+1 FI
   IF WPODK<8 THEN WPODK==+1 FI
   IF WSOLO<639 THEN WSOLO==+1 FI
   IF I=83 THEN I=15 FI
   DO
   IF TMR>0 THEN EXIT FI
   OD
   OD
   IF CONSOL<>7 THEN EXIT FI
  OD
   IF CONSOL<>7 THEN EXIT FI
 OD
   IF CONSOL<>7 THEN EXIT FI
OD
SNDRST()
RETURN

MODULE

DEFINE GETZER="[$A2 $80 $B5 $80 $9D $0600 $CA $10 $F8]",
       PUTZER="[$A2 $80 $BD $0600 $95 $80 $CA $10 $F8]"

CARD M1TMR2=538

CARD M1WP,M1J,M1K,M1I,M1W,M1GLW,M1P,M1WSSZ,M1GL
BYTE M1W22,M1W11

PROC GRAJ1()
BYTE ARRAY A1=[5 5 5 4 4 4 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 1 0]
BYTE ARRAY G1=[0 0 1 1 0 0 2 3 4 5]

BYTE ARRAY C1=[121 0 121 162 0 162 121 0 121 162 144 162
   108 0 108 144 0 144 108 0 108 144 121 144
   144 0 144 193 0 193 144 0 144 193 162 193
   96 0 96 128 0 128 96 0 96 128 108 128
   91 0 91 121 0 121 91 0 91 121 108 121
   81 0 81 108 0 108 81 0 81 108 91 108]

BYTE ARRAY D1=[122 122 122 121 121 121 122 122 122 121 108 121
   109 109 109 108 108 108 109 109 109 108 96 108
   145 145 145 144 144 144 145 145 145 144 128 144
   97 97 97 96 96 96 97 97 97 96 91 96
   92 92 92 91 91 91 92 92 92 91 81 91
   82 82 82 81 81 81 82 82 82 82 72 64]

BYTE ARRAY
E1=[1 0 0 0 0 0 1 0 0 1 0 0
   1 0 0 0 0 0 0 0 0 1 0 0
   1 0 0 0 0 0 1 0 0 0 0 0
   1 0 0 1 0 0 0 0 0 0 0 0]

BYTE ARRAY F1=[1 1 2 2 2 3 4 4 5 6 7 9 11 13 15 18 22 26 31 38 46 55 66 79 95 114 137 165 198 237]

getzer
       ATRACT=0
     M1W=G1(M1J)*12+M1K M1W=C1(M1W)
     IF M1W<>0 AND M1I=0 THEN
        M1W11=M1W M1GLW=0 FI
     M1W=G1(M1J)*12+M1K M1W=D1(M1W)
     IF M1W<>0 THEN
        M1W22=M1W FI

     M1P=E1(M1WP)
        IF M1P=1 THEN M1WSSZ=0 FI
        IF M1P=1 AND M1WSSZ=0 AND M1I=0
          THEN M1WSSZ=0 M1GL=5
        ELSE M1GL=2 FI
        POKE ($D202,M1W11)
M1W=A1(M1GLW) M1W=160+M1W
        POKE ($D203,M1W)
        POKE ($D206,M1W22)
        POKE ($D207,162)
        POKE ($D201,128+M1GL)
M1W=F1(M1WSSZ) POKE ($D200,M1W)
        IF M1GLW<23 THEN M1GLW==+1 FI
        IF M1WSSZ<29 THEN M1WSSZ==+1 AUDCTL=67
        ELSE
        AUDCTL=195
        FI
M1I==+1 IF M1I>7 THEN M1I=0
        M1WP=M1WP+1 IF M1WP>47 THEN M1WP=0 FI
FI
IF M1I=0 THEN
  M1K==+1 IF M1K>11 THEN M1K=0 FI
FI
IF M1K=0 AND M1I=0 THEN
     M1J==+1 IF M1J>9 THEN M1J=0 FI
FI
        M1TMR2=2
putzer
RETURN

PROC GRAJ2()
BYTE ARRAY A2=[1 2 8 5 7 5 4 3 2 2 1 0]
BYTE ARRAY G2=[6 9 8 7 6 5 4 3 2 2 1 0]

BYTE ARRAY C2=
[230 230 116 230 230 116 230 116
 230 230 116 230 230 116 230 116
 230 230 116 230 230 116 230 116
 230 230 116 230 230 116 230 116
 230 230 116 230 230 116 230 116
 230 230 116 230 230 116 230 116
 230 230 116 230 230 116 230 116
 230 230 116 230 230 116 230 116
 173 173 86 173 173 86 173 86
 173 173 86 173 173 86 173 86
 173 173 86 173 173 86 173 86
 173 173 86 173 173 86 173 86
 173 173 86 173 173 86 173 86
 173 173 86 173 173 86 173 86
 173 173 86 173 173 86 173 86
 173 173 86 173 173 86 173 86]
BYTE ARRAY D2=
[193 96 47 23 47 96 193 96
 204 102 50 24 50 102 204 102
 217 108 53 26 53 108 217 108
 243 121 60 29 60 121 243 121
 193 96 47 23 47 96 193 96
 204 102 50 24 50 102 204 102
 217 108 53 26 53 108 217 108
 243 121 60 29 60 121 243 121
 144 72 35 17 35 72 144 72
 153 76 37 18 37 76 153 76
 162 81 40 19 40 81 162 81
 182 91 45 22 45 91 182 91
 144 72 35 17 35 72 144 72
 153 76 37 18 37 76 153 76
 162 81 40 19 40 81 162 81
 182 91 45 22 45 91 182 91]
getzer

       AUDCTL=2
     M1W=C2(M1K)
IF M1I=0 THEN
     IF M1W<>0 THEN
        M1W22=M1W M1GLW=0 FI
     M1W=D2(M1K)
     IF M1W<>0 THEN
        M1W11=M1W FI
FI
        POKE ($D202,M1W11)
M1W=A2(M1GLW)+160
        POKE ($D203,M1W)
IF M1W11>60 THEN
       M1W=M1W11+1
   ELSE
       M1W=M1W11
FI
        POKE ($D206,M1W)
        POKE ($D207,162)
        POKE ($D200,M1W22)
M1W=G2(M1GLW)+192 POKE ($D201,M1W)
        IF M1GLW<11 THEN M1GLW==+1 FI
M1I==+1 IF M1I>7 THEN M1I=0
FI
IF M1I=0 THEN
  M1K==+1 IF M1K>127 THEN M1K=0 FI
FI
        M1TMR2=1
putzer
RETURN


PROC GRAJ3()
BYTE AUDF1=$D200,AUDC1=$D201,
     AUDF2=$D202,AUDC2=$D203

BYTE ARRAY A3=[3 5 5 5 5 5 5 5 5 5 2 0]
BYTE ARRAY G3=[8 15 10 6 4 3 2 2 1 1 1 0]

BYTE ARRAY C3=[
121 182 10 182 92 182
102 152 3 152 77 162
91  137 10 137 68 137
81  122 3 122 62 122

102 152 10 152 77 162
81  122 3 122 62 122
121 182 10 182 92 182
136 203 3 203  3  203

]


BYTE ARRAY D3=[
114 0 0 0 0 0
96 0 0 0 0 0
85 0 76 85 96 85
75 0 0 0 0 0
64 0 0 0 57 0
76 0 0 0 0 0
85 0 0 0 96 0
102 0 85 0 128 0
]
getzer

        AUDCTL=0
        M1W=C3(M1K)   ;WYS BAS
IF M1I=0 THEN
        IF M1W>0 THEN
          M1W22=M1W M1GLW=0 ZN=0
        IF M1W>10 THEN
          M1W22=M1W M1GLW=0 ZN=192
        FI
        FI
FI
        AUDF1=M1W22
         M1W=G3(M1GLW)
        AUDC1=M1W+ZN
        IF M1W=8 THEN AUDC1=134
                      AUDF1=0 FI
        M1W=D3(M1K)
        IF M1W<>0 THEN
        M1W11=M1W M1GL=0 FI
        AUDF2=M1W11
         M1W=A3(M1GL)+160
        AUDC2=M1W

        IF M1GLW<11 THEN M1GLW==+1 FI
        IF M1GL<11 THEN M1GL==+1 FI
M1I==+1
IF M1I>6 THEN M1I=0 FI
IF M1I=0 THEN
M1K==+1
IF M1K>47 THEN M1K=0 FI
FI
        M1TMR2=1
putzer
RETURN

PROC MUZ(BYTE TAK)
CARD M1TMR2VEC=552
AUDCTL=0 POKE ($D20F,3)
 SNDRST()
  IF TAK<>0 THEN M1TMR2=0
   M1WP=0 M1K=0 M1J=0 M1I=0
   IF TAK=1 THEN M1TMR2VEC=GRAY
   ELSEIF TAK=2 THEN M1TMR2VEC=GRAJ1
   ELSEIF TAK=3 THEN M1TMR2VEC=GRAJ2
   ELSEIF TAK=4 THEN M1TMR2VEC=GRAJ3 FI
   M1TMR2=1
  ELSE
  M1TMR2=0 FI
RETURN

MODULE

PROC NIC()
BYTE CON=$D01F
SNDRST()
MUZ(1)
DO UNTIL CON=6 OD
MUZ(2)
DO UNTIL CON<>6 OD
DO UNTIL CON=6 OD
MUZ(3)
DO UNTIL CON<>6 OD
DO UNTIL CON=6 OD
MUZ(4)
DO UNTIL CON<>6 OD
DO UNTIL CON=6 OD

MUZ(0)
RETURN

