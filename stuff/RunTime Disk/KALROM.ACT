›; Copyright 1983 by Action Computer Services›; All Rights Reserved››; last modified July 9, 1983››MODULE ; KALROM.ACT››DEFINE STRING = "CHAR ARRAY"›DEFINE ARGS2 = "[$85$A0$86$A1]"››DEFINE RAM = "SET $682 = $E^›  SET $B5 = $C800›  SET $E = $680^"›DEFINE ROM = "SET $680 = $E^›  SET $B5 = $5800›  SET $E = $682^"››;DEFINE RAM = " ", ROM = " "››SET $B5 = $0 SET $B6 = $0 ; code offset››; page zero array def›SET $E = $CB SET $F = 0›BYTE ARRAY line›BYTE low=line, high=line+1››SET $E = $6000›SET $491 = $6000›SET $B5 = $5800›SET $680 = $5800››BYTE ARRAY mask1(0)=[$80 $40 $20 $10 $8 $4 $2 $1],›    mask2(0)=[$7F $BF $DF $EF $F7 $FB $FD $FE]››BYTE x0=$D6,y0=$D7,x1=$D8,y1=$D9,t=$DA›RAM›CARD aXI,bXI,cXI,aYI,bYI,cYI ; initial›CARD aX,aY,bX,bY,cX,cY ; plot›CARD xA,yA,xB,yB,xC,yC ; erase›CARD period,npts,slow,sym,cntP,cntE›CARD ystart›BYTE ARRAY ytop›BYTE ARRAY yLocL(129),yLocH(129),rsh3(256)››PROC ROM InitGr8() RAM›  BYTE low, high, t›  BYTE i, memCtl=$D400, memCtlS=$22F›  CARD next=low, RAMTOP=$69, j,›    DLc=$D402, DLs=$230, MEMTOP=$2E5›  CARD ARRAY dl›  BYTE ARRAY COLOR(0)=$2C4››  ROM››; setup our special DL with inverted›; bottom.  Tricky, thanks Sheldon››  COLOR(1) = 15›  COLOR(2) = 0›; SetColor(1,0,15)›; SetColor(2,0,0)›  ›  memCtlS = 0   memCtl = 0 ; turn off display›  ytop = (RAMTOP & $F000) - $1000›  ystart = ytop + 512›; Zero(ytop, $1000) ; clear display›  FOR j = 0 TO $FFF DO›    ytop(j) = 0›  OD››  DLs = ystart - $400›  MEMTOP = DLs - 1››  dl = DLs›  dl^ = $70›  dl==+1›  dl^ = $4F ; load scan counter›  dl==+1›  dl^ = ystart›  dl==+2››  i = 1›  WHILE i < 111 DO›    dl^ = $F0F›    dl==+2›    i = i + 2›  OD›  dl^ = $F   ›  dl==+1››  i = 0›  next = ystart + 3552 ; 111*32›  WHILE i < 112 DO›    dl^ = $4F›    dl==+1›    dl^ = next›    next = next - 32›    dl==+2››    i = i + 1›  OD›  dl^ = $41›  dl==+1›  dl^ = DLs››  DLc = DLs›  memCtlS = $21 ; turn display on››  i = 0 ›  next = ytop›  WHILE i < 129 DO›    yLocL(i) = low›    yLocH(i) = high›    next = next + 32›    i = i + 1›  OD››  j = 0›  WHILE j<256 DO›    t = j›    t = t RSH 3›    rsh3(j) = t›    j = j + 1›  OD›RETURN›››;PROC Plot8=*(BYTE x,y)›; BYTE x1=$A0, y1=$A1›;›; ARGS2›;›; low = yLocL(y1)›; high = yLocH(y1)›; line ==+ rsh3(x1)›; line^ ==% mask1(x1&7)›;RETURN›››PROC Plot8=*(BYTE x,y)›[›  $BC yLocL  ; LDY yLocL,X›  $84 high   ; STY high›  $BC yLocH  ; LDY yLocH,X›  $84 high+1 ; STY high+1›  $AA        ; TAX›  $BC rsh3   ; LDY rsh3,X›  $29 $7     ; AND #7›  $AA        ; TAX›  $BD mask1  ; LDA mask1,X›  $11 high   ; ORA (high),Y›  $91 high   ; STA (high),Y›  $60        ; RTS›] ›››;PROC Erase8=*(BYTE x,y)›; BYTE x1=$A0, y1=$A1›;›; ARGS2›;›; low = yLocL(y1)›; high = yLocH(y1)›; line ==+ rsh3(x1)›; line^ ==& mask2(x1&7)›;RETURN›››PROC Erase8=*(BYTE x,y)›[›  $BC yLocL  ; LDY yLocL,X›  $84 high   ; STY high›  $BC yLocH  ; LDY yLocH,X›  $84 high+1 ; STY high+1›  $AA        ; TAX›  $BC rsh3   ; LDY rsh3,X›  $29 $7     ; AND #7›  $AA        ; TAX›  $BD mask2  ; LDA mask2,X›  $31 high   ; AND (high),Y›  $91 high   ; STA (high),Y›  $60        ; RTS›] ›››PROC GenP=*()›  BYTE x=aX+1,y=aY+1,ATRACT=$4D››  aX = (aX + bX) ! bX›  aY = (aY + bY) ! bY››  cntP = cntP - 1›  IF cntP = 0 THEN›    bX = (bX + cX) ! cX›    bY = (bY + cY) ! cY››    cntP = period›; turn off attact mode, we're›; changing the screen anyway›    ATRACT = 0›  FI››  x0 = x RSH 1›  y0 = y RSH 1›  IF x0 <= y0 THEN›    x1 = 255 - x0›    y1 = 255 - y0›    Plot8(x0, y0);Plot8(x0, y1)›    Plot8(y0, x0);Plot8(y0, x1)›    Plot8(x1, y0);Plot8(x1, y1)›    Plot8(y1, x0);Plot8(y1, x1)›  FI›RETURN›››PROC GenE=*()›  BYTE x=xA+1,y=yA+1››  xA = (xA + xB) ! xB›  yA = (yA + yB) ! yB››  cntE = cntE - 1›  IF cntE = 0 THEN›    xB = (xB + xC) ! xC›    yB = (yB + yC) ! yC››    cntE = period›  FI››  x0 = x RSH 1›  y0 = y RSH 1›  IF x0 <= y0 THEN›    x1 = 255 - x0›    y1 = 255 - y0›    Erase8(x0,y0);Erase8(x0,y1)›    Erase8(y0,x0);Erase8(y0,x1)›    Erase8(x1,y0);Erase8(x1,y1)›    Erase8(y1,x0);Erase8(y1,xWHILE i<slow OR trig=0 DO›  FI›RETURN›››PROC KalROM() RAM›  CHAR CH=$2FC, c, s›  CARD i›  BYTE trig=$D010, stick=$D300››  ROM››; change following for different patterns›  aXI = 22175 ; 5221  ; 12767›  bXI = 63751 ; 64449 ; 64471›  cXI = 3›  aYI = 17791 ; 57669 ; 13183›  bYI = 63791 ; 64489 ; 64511›  cYI = 3›  period = 10000›  npts = 2500›  slow = 0››  WHILE 1 DO›    InitGr8()›    aX = aXI›    bX = bXI›    cX = cXI›    aY = aYI›    bY = bYI›    cY = cYI›    cntP = period›    xA = aXI›    yA = aYI›    xB = bXI›    yB = bYI›    xC = cXI›    yC = cYI›    cntE = period››    i = 0›    CH=$FF›    WHILE i<npts AND CH=$FF DO›      GenP()›      i = i + 1›    OD››    WHILE CH=$FF DO›      GenP()›      GenE()››      s = stick & $F›      IF s=7 AND npts<65000 THEN›        npts = npts + 1›        GenP()›      FI››      IF s=11 AND npts>2 THEN›        npts = npts - 1›        GenE()›      FI››      i = 0›      WHILE i<slow OR trig=0 DO›        i = i + 1›      OD›    OD›  OD›RETURN››